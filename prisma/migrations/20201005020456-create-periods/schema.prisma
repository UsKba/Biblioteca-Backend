generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = "***"
}

model Users {
  id         Int    @default(autoincrement()) @id
  enrollment String @unique
  name       String
  email      String @unique

  UserReserve UserReserves[]

  user1 Friends[] @relation("user1")
  user2 Friends[] @relation("user2")

  user      Invites[] @relation("user")
  recipient Invites[] @relation("recipient")
}

model Friends {
  id Int @default(autoincrement()) @id

  user1 Users @relation("user1", fields: [userId1], references: [id])
  user2 Users @relation("user2", fields: [userId2], references: [id])

  userId1 Int
  userId2 Int
}

model Invites {
  id Int @default(autoincrement()) @id

  user      Users @relation("user", fields: [userId], references: [id])
  recipient Users @relation("recipient", fields: [recipientId], references: [id])

  userId      Int
  recipientId Int
}

model Reserves {
  id    Int @default(autoincrement()) @id
  day   Int
  month Int
  year  Int

  room   Rooms @relation(fields: [roomId], references: [id])
  roomId Int

  schedule    Schedules      @relation(fields: [scheduleId], references: [id])
  scheduleId  Int
  UserReserve UserReserves[]
}

model UserReserves {
  id Int @default(autoincrement()) @id

  user   Users @relation(fields: [userId], references: [id])
  userId Int

  reserve   Reserves @relation(fields: [reserveId], references: [id])
  reserveId Int
}

model Rooms {
  id        Int        @default(autoincrement()) @id
  initials  String     @unique
  available Boolean    @default(true)
  Reserve   Reserves[]
}

model Schedules {
  id          Int    @default(autoincrement()) @id
  initialHour String
  endHour     String

  period   Periods @relation(fields: [periodId], references: [id])
  periodId Int

  Reserve Reserves[]
}

model Periods {
  id Int @default(autoincrement()) @id

  name        String
  initialHour String
  endHour     String

  Schedules Schedules[]
}