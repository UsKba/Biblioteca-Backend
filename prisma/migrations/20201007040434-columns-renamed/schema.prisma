generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = "***"
}

model User {
  id         Int    @default(autoincrement()) @id
  enrollment String @unique
  email      String @unique
  name       String

  UserReserve UserReserve[]

  FriendUser1 Friend[] @relation("user1")
  FriendUser2 Friend[] @relation("user2")

  InviteSender   Invite[] @relation("sender")
  InviteReceiver Invite[] @relation("receiver")
}

model Friend {
  id Int @default(autoincrement()) @id

  User1 User @relation("user1", fields: [userId1], references: [id])
  User2 User @relation("user2", fields: [userId2], references: [id])

  userId1 Int
  userId2 Int
}

model Invite {
  id Int @default(autoincrement()) @id

  UserSender   User @relation("sender", fields: [senderId], references: [id])
  UserReceiver User @relation("receiver", fields: [receiverId], references: [id])

  senderId   Int
  receiverId Int
}

model Reserve {
  id    Int @default(autoincrement()) @id
  day   Int
  month Int
  year  Int

  Room     Room     @relation(fields: [roomId], references: [id])
  Schedule Schedule @relation(fields: [scheduleId], references: [id])

  roomId     Int
  scheduleId Int

  UserReserve UserReserve[]
}

model UserReserve {
  id Int @default(autoincrement()) @id

  User    User    @relation(fields: [userId], references: [id])
  Reserve Reserve @relation(fields: [reserveId], references: [id])

  userId    Int
  reserveId Int
}

model Room {
  id        Int     @default(autoincrement()) @id
  initials  String  @unique
  available Boolean @default(true)

  Reserve Reserve[]
}

model Schedule {
  id          Int    @default(autoincrement()) @id
  initialHour String
  endHour     String

  Period   Period @relation(fields: [periodId], references: [id])
  periodId Int

  Reserve Reserve[]
}

model Period {
  id          Int    @default(autoincrement()) @id
  name        String
  initialHour String
  endHour     String

  Schedule Schedule[]
}
